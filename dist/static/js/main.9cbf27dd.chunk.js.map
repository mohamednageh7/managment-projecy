{"version":3,"sources":["component/layout/SingedInLinks.js","store/actions/authAction.js","component/layout/SingedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notification.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/Dashboard.js","component/project/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","store/actions/projectAction.js","component/project/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","SingedInLinks","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authFirstName","authLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","fireStore","authorId","add","authId","Date","CreateProject","history","push","singleProject","App","path","component","exact","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducers","combineReducers","firestoreReducer","firebaseReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cbf27dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authAction';\r\nconst SignInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/create'>New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut}>Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>                    \r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (SignInLinks);","import { getFirebase } from \"react-redux-firebase\"\r\nimport {getFirestore} from 'redux-firestore';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN-SUCCESS'});\r\n        }).catch((error) => {\r\n            dispatch({type: 'LOGIN_ERROR', error});\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState,{getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SINGOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState,{getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('user').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch( error => {\r\n            dispatch({type: 'SIGNUP_ERROR', error})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/signUp'>Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Login</NavLink>\r\n            </li>\r\n        </ul>                    \r\n    );\r\n};\r\n\r\nexport default SignOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignInLinks from './SingedInLinks';\r\nimport SignOutLinks from './SingedOutLinks';\r\nimport {connect} from 'react-redux';\r\nimport SingedInLinks from './SingedInLinks';\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile} = props;\r\n   \r\n    const links = auth.uid ? <SingedInLinks profile={profile}/>: <SignOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>                     \r\n    );\r\n};\r\n\r\nconst mapStateToProps\r\n = (state) => {\r\n    console.log(state);\r\n     return {\r\n        auth : state.firebase.auth,\r\n        profile: state.firebase.profile\r\n     }\r\n }\r\nexport default connect(mapStateToProps) (Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notification = (props) => {\r\n    const {notifications}= props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-o\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notificatio</span>\r\n                    <ul className=\"notification\">\r\n                        { notifications && notifications.map( item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user}</span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport moment from 'moment';\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Post by the {project.authFirstName} {project.authLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map((project) => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                    <ProjectSummary project={project}  />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectList;","import React , {Component} from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../project/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect } from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props)\r\n        const {projects, auth,notifications} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList  projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.project,\r\n        auth: state.firebase.auth,\r\n        notifications : state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n\r\n// export default connect(mapStateToProps)(Dashboard);\r\nexport default  compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect ([\r\n        { collection:'project',\r\n        orderBy:['createdAt','desc']\r\n    },\r\n        \r\n        {collection:'notifications',limit:3,\r\n        orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project,auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by The {project.authFirstName}  { project.authLastName}</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project....</p>\r\n            </div>\r\n            );\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.project;\r\n    const project = projects ? projects[id] : null;\r\n    \r\n    return{\r\n       project: project,\r\n       auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'project'\r\n    }])\r\n) (ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport {connect} from  'react-redux';\r\nimport {signIn} from '../../store/actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    };\r\n\r\n    render() {\r\n        const {authError,auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       this.props.signUp(this.state)\r\n    };\r\n\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","export const createProject = (project) => {\r\n    return (dispatch,getState, {getFirestore, getFirebase}) => {\r\n        //make async call to database\r\n        const fireStore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        fireStore.collection('project').add({\r\n            ...project,\r\n            authFirstName: profile.firstName,\r\n            authLastName:profile.lastName,\r\n            authId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((error) => {\r\n                dispatch({type:'CREATE_PROJECT_ERROR',error});\r\n            })\r\n       \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                  </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Creat</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject : (singleProject) => dispatch(createProject(singleProject))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (CreateProject);\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch,Route} from 'react-router-dom';\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/project/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/project/CreateProject';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path='/' component={Dashboard} exact/>\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signUp' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n                console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN-SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n            case 'SINOUT_SUCCESS':\r\n                console.log('signout success');\r\n                return state;\r\n                case 'SIGNUP_SUCCESS':\r\n                    console.log('signup success')\r\n                    return {\r\n                        ...state,\r\n                        authError:null\r\n                    }\r\n                    case 'SIGNUP_ERROR':\r\n                        console.log('signup error')\r\n                        return {\r\n                            ...state,\r\n                            authError: action.error.message\r\n                        }\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","  \r\nconst initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n\r\n      case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error', action.error);\r\n        return state;\r\n\r\n        default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducers';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n    auth : authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducers;","import * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC5M_Z4n26r5Q4moAdDFjZdgM60WYF3b7U\",\r\n    authDomain: \"managment-project.firebaseapp.com\",\r\n    databaseURL: \"https://managment-project.firebaseio.com\",\r\n    projectId: \"managment-project\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"751571271179\",\r\n    appId: \"1:751571271179:web:60bd35d0ab50af1f8ed10e\"\r\n  };\r\n\r\n    // Initialize Firebase\r\n    firebase.initializeApp(firebaseConfig);\r\n\r\n    // firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n    export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducers from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport firebase from './config/fbconfig';\nimport 'materialize-css'; // for js file\nimport 'materialize-css/dist/css/materialize.min.css'; // for css file\n\nconst store = createStore(rootReducers,\n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase),\n    reactReduxFirebase(firebase,{useFirestoreForProfile:true,userProfile:'user', attachAuthIsReady:true})\n    )\n    \n    );\n\n    store.firebaseAuthIsReady.then(() => {\n        ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n        serviceWorker.unregister();\n    })\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}